{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/reactAssessment/src/components/ListView.js\";\nimport React from \"react\";\nimport \"./ListView.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListView({\n  lists,\n  selectedLists,\n  onListSelection,\n  onCreateNewList\n}) {\n  console.log(lists);\n  function onUpdateList(lists) {\n    const groupedData = lists.reduce((result, item) => {\n      // If the group for the current list_number doesn't exist, create it\n      if (!result[item.list_number]) {\n        result[item.list_number] = [];\n      }\n      // Add the item to the respective group\n      result[item.list_number].push(item);\n      return result;\n    }, {});\n    Object.values(groupedData).forEach(value => {\n      console.log(value);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Creation Lists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onCreateNewList,\n      children: \"Create a new list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lists-container\",\n      children: lists.map(list => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `list-container ${selectedLists.includes(list.id) ? \"selected\" : \"\"}`,\n        onClick: () => onListSelection(list.id),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: list.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: list.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, list.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = ListView;\nexport default ListView;\nvar _c;\n$RefreshReg$(_c, \"ListView\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ListView","lists","selectedLists","onListSelection","onCreateNewList","console","log","onUpdateList","groupedData","reduce","result","item","list_number","push","Object","values","forEach","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","list","includes","id","name","description","_c","$RefreshReg$"],"sources":["/home/workspace/reactjs/coding-practices/reactAssessment/src/components/ListView.js"],"sourcesContent":["import React from \"react\";\nimport \"./ListView.css\";\n\nfunction ListView({ lists, selectedLists, onListSelection, onCreateNewList }) {\n  console.log(lists);\n\n  function onUpdateList(lists) {\n    const groupedData = lists.reduce((result, item) => {\n      // If the group for the current list_number doesn't exist, create it\n      if (!result[item.list_number]) {\n        result[item.list_number] = [];\n      }\n      // Add the item to the respective group\n      result[item.list_number].push(item);\n      return result;\n    }, {});\n    Object.values(groupedData).forEach((value) => {\n      console.log(value);\n    });\n  }\n\n  return (\n    <div className=\"list-view\">\n      <h1>Creation Lists</h1>\n      <button onClick={onCreateNewList}>Create a new list</button>\n      <div className=\"lists-container\">\n        {lists.map((list) => (\n          <div\n            key={list.id}\n            className={`list-container ${\n              selectedLists.includes(list.id) ? \"selected\" : \"\"\n            }`}\n            onClick={() => onListSelection(list.id)}\n          >\n            <h3>{list.name}</h3>\n            <p>{list.description}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default ListView;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,QAAQA,CAAC;EAAEC,KAAK;EAAEC,aAAa;EAAEC,eAAe;EAAEC;AAAgB,CAAC,EAAE;EAC5EC,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;EAElB,SAASM,YAAYA,CAACN,KAAK,EAAE;IAC3B,MAAMO,WAAW,GAAGP,KAAK,CAACQ,MAAM,CAAC,CAACC,MAAM,EAAEC,IAAI,KAAK;MACjD;MACA,IAAI,CAACD,MAAM,CAACC,IAAI,CAACC,WAAW,CAAC,EAAE;QAC7BF,MAAM,CAACC,IAAI,CAACC,WAAW,CAAC,GAAG,EAAE;MAC/B;MACA;MACAF,MAAM,CAACC,IAAI,CAACC,WAAW,CAAC,CAACC,IAAI,CAACF,IAAI,CAAC;MACnC,OAAOD,MAAM;IACf,CAAC,EAAE,CAAC,CAAC,CAAC;IACNI,MAAM,CAACC,MAAM,CAACP,WAAW,CAAC,CAACQ,OAAO,CAAEC,KAAK,IAAK;MAC5CZ,OAAO,CAACC,GAAG,CAACW,KAAK,CAAC;IACpB,CAAC,CAAC;EACJ;EAEA,oBACElB,OAAA;IAAKmB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBpB,OAAA;MAAAoB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBxB,OAAA;MAAQyB,OAAO,EAAEpB,eAAgB;MAAAe,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5DxB,OAAA;MAAKmB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC7BlB,KAAK,CAACwB,GAAG,CAAEC,IAAI,iBACd3B,OAAA;QAEEmB,SAAS,EAAE,kBACThB,aAAa,CAACyB,QAAQ,CAACD,IAAI,CAACE,EAAE,CAAC,GAAG,UAAU,GAAG,EAAE,EAChD;QACHJ,OAAO,EAAEA,CAAA,KAAMrB,eAAe,CAACuB,IAAI,CAACE,EAAE,CAAE;QAAAT,QAAA,gBAExCpB,OAAA;UAAAoB,QAAA,EAAKO,IAAI,CAACG;QAAI;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBxB,OAAA;UAAAoB,QAAA,EAAIO,IAAI,CAACI;QAAW;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAPpBG,IAAI,CAACE,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQT,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACQ,EAAA,GAtCQ/B,QAAQ;AAwCjB,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}