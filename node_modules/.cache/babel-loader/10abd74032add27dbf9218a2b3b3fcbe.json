{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/reactAssessment/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { RotatingLines } from \"react-loader-spinner\";\nimport axios from \"axios\";\nimport ErrorView from \"./components/ErrorView\";\nimport ActionButtons from \"./components/ActionButtons\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://apis.ccbp.in/list-creation/lists\";\nfunction App() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState([]);\n  const [lists, setLists] = useState({});\n  const [listOrder, setListOrder] = useState([]);\n  const [selectedLists, setSelectedLists] = useState([]);\n  const [newListView, setNewListView] = useState(false);\n  const [newListKey, setNewListKey] = useState(null);\n  const [showCreateNewList, setShowCreateNewList] = useState(true);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    setLoading(true);\n    setError(false);\n    try {\n      const response = await axios.get(API_URL);\n      const {\n        lists\n      } = response.data;\n      const groupedLists = lists.reduce((acc, item) => {\n        if (!acc[item.list_number]) {\n          acc[item.list_number] = [];\n        }\n        acc[item.list_number].push(item);\n        return acc;\n      }, {});\n      const sortedListNumbers = Object.keys(groupedLists).sort((a, b) => a - b);\n      setData(lists);\n      setLists(groupedLists);\n      setListOrder(sortedListNumbers);\n      setLoading(false);\n    } catch (err) {\n      setError(true);\n      setLoading(false);\n    }\n  };\n  const handleListSelection = listNumber => {\n    const updatedSelection = selectedLists.includes(listNumber) ? selectedLists.filter(num => num !== listNumber) : [...selectedLists, listNumber];\n    setSelectedLists(updatedSelection);\n  };\n  const handleCreateNewList = () => {\n    if (selectedLists.length !== 2) {\n      let alertForCheckEl = document.getElementById(\"alertForCheck\");\n      alertForCheckEl.textContent = \"*You should select exactly 2 lists to create a new list\";\n      return;\n    }\n    setShowCreateNewList(false);\n    const [firstList, secondList] = selectedLists.sort((a, b) => a - b);\n    const nextListNumber = Math.max(...Object.keys(lists).map(Number)) + 1;\n    const newListKey = nextListNumber.toString();\n    setNewListKey(newListKey);\n    setLists(prev => {\n      const updatedLists = {\n        ...prev\n      };\n      const newOrder = [];\n      let inserted = false;\n      Object.keys(updatedLists).sort((a, b) => a - b).forEach(key => {\n        newOrder.push(key);\n        if (key === firstList.toString() && !inserted) {\n          newOrder.push(newListKey);\n          inserted = true;\n        }\n      });\n      const reorderedLists = {};\n      newOrder.forEach(key => {\n        reorderedLists[key] = updatedLists[key] || [];\n      });\n      reorderedLists[newListKey] = [];\n      return reorderedLists;\n    });\n    setListOrder(prevOrder => {\n      const newOrder = [...prevOrder];\n      const insertIndex = newOrder.indexOf(firstList.toString()) + 1;\n      newOrder.splice(insertIndex, 0, newListKey);\n      return newOrder;\n    });\n    setNewListView(true);\n  };\n  const handleCancel = () => {\n    setShowCreateNewList(true);\n    setNewListView(false);\n    setSelectedLists([]);\n    fetchData();\n  };\n  const handleUpdate = () => {\n    setShowCreateNewList(true);\n    setNewListView(false);\n    setSelectedLists([]);\n    setLists(prevLists => {\n      const updatedLists = {\n        ...prevLists\n      };\n      if (updatedLists[\"3\"]) {\n        updatedLists[\"3\"] = [...updatedLists[\"3\"]];\n      }\n      return updatedLists;\n    });\n    setListOrder(prevOrder => {\n      return [...prevOrder];\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: /*#__PURE__*/_jsxDEV(RotatingLines, {\n        strokeColor: \"grey\",\n        strokeWidth: \"5\",\n        animationDuration: \"0.75\",\n        width: \"96\",\n        visible: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(ErrorView, {\n      onRetry: fetchData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"head-btn-container\",\n        children: [showCreateNewList && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"main-heading\",\n            children: \"List Creation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"add-new-list-button\",\n            onClick: handleCreateNewList,\n            children: \"Create a New List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"alertForCheck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `lists-container ${newListView ? \"row\" : \"\"}`,\n        children: newListView ? listOrder.map(listNumber => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-creation-view\",\n          children: /*#__PURE__*/_jsxDEV(ListContainer, {\n            listNumber: listNumber,\n            list: lists[listNumber],\n            onListSelection: handleListSelection\n          }, listNumber, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 19\n        }, this)) : listOrder.map(listNumber => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-creation-view\",\n          children: /*#__PURE__*/_jsxDEV(ListContainer, {\n            listNumber: listNumber,\n            list: lists[listNumber],\n            onListSelection: handleListSelection\n          }, listNumber, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ActionButtons, {\n        onCancel: handleCancel,\n        onUpdate: handleUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"umr/mptwrsxy/Tdsv8lvkZNqCXE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","RotatingLines","axios","ErrorView","ActionButtons","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","App","_s","loading","setLoading","error","setError","data","setData","lists","setLists","listOrder","setListOrder","selectedLists","setSelectedLists","newListView","setNewListView","newListKey","setNewListKey","showCreateNewList","setShowCreateNewList","fetchData","response","get","groupedLists","reduce","acc","item","list_number","push","sortedListNumbers","Object","keys","sort","a","b","err","handleListSelection","listNumber","updatedSelection","includes","filter","num","handleCreateNewList","length","alertForCheckEl","document","getElementById","textContent","firstList","secondList","nextListNumber","Math","max","map","Number","toString","prev","updatedLists","newOrder","inserted","forEach","key","reorderedLists","prevOrder","insertIndex","indexOf","splice","handleCancel","handleUpdate","prevLists","className","children","strokeColor","strokeWidth","animationDuration","width","visible","fileName","_jsxFileName","lineNumber","columnNumber","onRetry","type","onClick","id","ListContainer","list","onListSelection","onCancel","onUpdate","_c","$RefreshReg$"],"sources":["/home/workspace/reactjs/coding-practices/reactAssessment/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { RotatingLines } from \"react-loader-spinner\";\nimport axios from \"axios\";\nimport ErrorView from \"./components/ErrorView\";\nimport ActionButtons from \"./components/ActionButtons\";\nimport \"./App.css\";\n\nconst API_URL = \"https://apis.ccbp.in/list-creation/lists\";\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState([]);\n  const [lists, setLists] = useState({});\n  const [listOrder, setListOrder] = useState([]);\n  const [selectedLists, setSelectedLists] = useState([]);\n  const [newListView, setNewListView] = useState(false);\n  const [newListKey, setNewListKey] = useState(null);\n  const [showCreateNewList, setShowCreateNewList] = useState(true);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    setLoading(true);\n    setError(false);\n    try {\n      const response = await axios.get(API_URL);\n      const { lists } = response.data;\n      const groupedLists = lists.reduce((acc, item) => {\n        if (!acc[item.list_number]) {\n          acc[item.list_number] = [];\n        }\n        acc[item.list_number].push(item);\n        return acc;\n      }, {});\n\n      const sortedListNumbers = Object.keys(groupedLists).sort((a, b) => a - b);\n      setData(lists);\n      setLists(groupedLists);\n      setListOrder(sortedListNumbers);\n      setLoading(false);\n    } catch (err) {\n      setError(true);\n      setLoading(false);\n    }\n  };\n\n  const handleListSelection = (listNumber) => {\n    const updatedSelection = selectedLists.includes(listNumber)\n      ? selectedLists.filter((num) => num !== listNumber)\n      : [...selectedLists, listNumber];\n    setSelectedLists(updatedSelection);\n  };\n\n  const handleCreateNewList = () => {\n    if (selectedLists.length !== 2) {\n      let alertForCheckEl = document.getElementById(\"alertForCheck\");\n      alertForCheckEl.textContent =\n        \"*You should select exactly 2 lists to create a new list\";\n      return;\n    }\n\n    setShowCreateNewList(false);\n    const [firstList, secondList] = selectedLists.sort((a, b) => a - b);\n    const nextListNumber = Math.max(...Object.keys(lists).map(Number)) + 1;\n    const newListKey = nextListNumber.toString();\n    setNewListKey(newListKey);\n\n    setLists((prev) => {\n      const updatedLists = { ...prev };\n      const newOrder = [];\n\n      let inserted = false;\n      Object.keys(updatedLists)\n        .sort((a, b) => a - b)\n        .forEach((key) => {\n          newOrder.push(key);\n          if (key === firstList.toString() && !inserted) {\n            newOrder.push(newListKey);\n            inserted = true;\n          }\n        });\n\n      const reorderedLists = {};\n      newOrder.forEach((key) => {\n        reorderedLists[key] = updatedLists[key] || [];\n      });\n      reorderedLists[newListKey] = [];\n\n      return reorderedLists;\n    });\n\n    setListOrder((prevOrder) => {\n      const newOrder = [...prevOrder];\n      const insertIndex = newOrder.indexOf(firstList.toString()) + 1;\n      newOrder.splice(insertIndex, 0, newListKey);\n      return newOrder;\n    });\n\n    setNewListView(true);\n  };\n\n  const handleCancel = () => {\n    setShowCreateNewList(true);\n    setNewListView(false);\n    setSelectedLists([]);\n    fetchData();\n  };\n\n  const handleUpdate = () => {\n    setShowCreateNewList(true);\n    setNewListView(false);\n    setSelectedLists([]);\n\n    setLists((prevLists) => {\n      const updatedLists = { ...prevLists };\n      if (updatedLists[\"3\"]) {\n        updatedLists[\"3\"] = [...updatedLists[\"3\"]];\n      }\n      return updatedLists;\n    });\n\n    setListOrder((prevOrder) => {\n      return [...prevOrder];\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      {loading ? (\n        <div className=\"loader\">\n          <RotatingLines\n            strokeColor=\"grey\"\n            strokeWidth=\"5\"\n            animationDuration=\"0.75\"\n            width=\"96\"\n            visible={true}\n          />\n        </div>\n      ) : error ? (\n        <ErrorView onRetry={fetchData} />\n      ) : (\n        <div className=\"main-container\">\n          <div className=\"head-btn-container\">\n            {showCreateNewList && (\n              <>\n                <h1 className=\"main-heading\">List Creation</h1>\n                <button\n                  type=\"button\"\n                  className=\"add-new-list-button\"\n                  onClick={handleCreateNewList}\n                >\n                  Create a New List\n                </button>\n              </>\n            )}\n            <span id=\"alertForCheck\"></span>\n          </div>\n\n          <div className={`lists-container ${newListView ? \"row\" : \"\"}`}>\n            {newListView\n              ? listOrder.map((listNumber) => (\n                  <div className=\"list-creation-view\">\n                    <ListContainer\n                      key={listNumber}\n                      listNumber={listNumber}\n                      list={lists[listNumber]}\n                      onListSelection={handleListSelection}\n                    />\n                  </div>\n                ))\n              : listOrder.map((listNumber) => (\n                  <div className=\"list-creation-view\">\n                    <ListContainer\n                      key={listNumber}\n                      listNumber={listNumber}\n                      list={lists[listNumber]}\n                      onListSelection={handleListSelection}\n                    />\n                  </div>\n                ))}\n          </div>\n\n          <ActionButtons onCancel={handleCancel} onUpdate={handleUpdate} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}