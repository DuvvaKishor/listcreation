{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/reactAssessment/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { RotatingLines } from \"react-loader-spinner\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://apis.ccbp.in/list-creation/lists\"; // Replace with the actual API URL\n\nfunction App() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState([]);\n  const [lists, setLists] = useState({});\n  const [listOrder, setListOrder] = useState([]); // To track list order\n  const [selectedLists, setSelectedLists] = useState([]);\n  const [newListView, setNewListView] = useState(false);\n  const [newListKey, setNewListKey] = useState(null); // Track new list number\n  const [showCreateNewList, setShowCreateNewList] = useState(true);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    setLoading(true);\n    setError(false);\n    try {\n      const response = await axios.get(API_URL);\n      const {\n        lists,\n        total\n      } = response.data; // Replace with actual response properties\n      const groupedLists = lists.reduce((acc, item) => {\n        if (!acc[item.list_number]) {\n          acc[item.list_number] = [];\n        }\n        acc[item.list_number].push(item);\n        return acc;\n      }, {});\n\n      // Set the lists and the order they should appear\n      const sortedListNumbers = Object.keys(groupedLists).sort((a, b) => a - b);\n      setData(lists);\n      setLists(groupedLists);\n      setListOrder(sortedListNumbers); // Save the order of list numbers\n      setLoading(false);\n    } catch (err) {\n      setError(true);\n      setLoading(false);\n    }\n  };\n  const handleRetry = () => {\n    fetchData();\n  };\n  const handleListSelection = listNumber => {\n    const updatedSelection = selectedLists.includes(listNumber) ? selectedLists.filter(num => num !== listNumber) : [...selectedLists, listNumber];\n    setSelectedLists(updatedSelection);\n  };\n  const handleCreateNewList = () => {\n    if (selectedLists.length !== 2) {\n      let alertForCheckEl = document.getElementById(\"alertForCheck\");\n      alertForCheckEl.textContent = \"*You should select exactly 2 lists to create a new list\";\n      return;\n    }\n\n    // Sort the selected list numbers to determine the correct order\n    const [firstList, secondList] = selectedLists.sort((a, b) => a - b);\n\n    // Determine the next available list number by checking the highest existing list number\n    const nextListNumber = Math.max(...Object.keys(lists).map(Number)) + 1;\n\n    // Set the new list key to be the next list number\n    const newListKey = nextListNumber.toString();\n    setNewListKey(newListKey);\n\n    // Insert the new list dynamically between the selected lists\n    setLists(prev => {\n      const updatedLists = {\n        ...prev\n      };\n      const newOrder = [];\n\n      // Find the correct insertion point for the new list\n      let inserted = false;\n      Object.keys(updatedLists).sort((a, b) => a - b).forEach(key => {\n        newOrder.push(key);\n        if (key === firstList.toString() && !inserted) {\n          newOrder.push(newListKey); // Insert new list after the first selected list\n          inserted = true;\n        }\n      });\n      const reorderedLists = {};\n      newOrder.forEach(key => {\n        reorderedLists[key] = updatedLists[key] || [];\n      });\n      reorderedLists[newListKey] = []; // Add an empty array for the new list (0 items)\n\n      return reorderedLists;\n    });\n    setListOrder(prevOrder => {\n      const newOrder = [...prevOrder];\n      const insertIndex = newOrder.indexOf(firstList.toString()) + 1; // Position after the first selected list\n      newOrder.splice(insertIndex, 0, newListKey); // Insert the new list in the order\n      return newOrder;\n    });\n    setNewListView(true); // Show the new list view\n  };\n  const handleMoveItem = (item, fromList, toList = \"3\") => {\n    setLists(prevLists => {\n      const updatedLists = {\n        ...prevLists\n      };\n\n      // Remove the item from the source list\n      const updatedFromList = (updatedLists[fromList] || []).filter(i => i.id !== item.id);\n\n      // Ensure the target list exists in the lists object\n      if (!updatedLists[toList]) {\n        updatedLists[toList] = [];\n      }\n\n      // Add the item to the target list\n      if (!updatedLists[toList].some(i => i.id === item.id)) {\n        updatedLists[toList].push(item);\n      }\n\n      // Return the updated lists\n      return {\n        ...updatedLists,\n        [fromList]: updatedFromList // Update the source list\n      };\n    });\n\n    // Ensure List 3 is included in the list order\n    setListOrder(prevOrder => {\n      if (!prevOrder.includes(toList)) {\n        return [...prevOrder, toList];\n      }\n      return prevOrder;\n    });\n  };\n  const handleCancel = () => {\n    setNewListView(false);\n    setSelectedLists([]); // Uncheck all checkboxes\n    fetchData();\n  };\n  const handleUpdate = () => {\n    setNewListView(false);\n    setSelectedLists([]); // Uncheck all checkboxes\n\n    // Ensure List 3 has the same behavior as List 1 or List 2 after update\n    setLists(prevLists => {\n      const updatedLists = {\n        ...prevLists\n      };\n\n      // Ensure that List 3 is finalized (removes its dual-arrow behavior)\n      if (updatedLists[\"3\"]) {\n        updatedLists[\"3\"] = [...updatedLists[\"3\"]]; // Keep its items intact\n      }\n      return updatedLists;\n    });\n    setListOrder(prevOrder => {\n      // Ensure List 3 stays in its current order position\n      return [...prevOrder];\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: /*#__PURE__*/_jsxDEV(RotatingLines, {\n        strokeColor: \"grey\",\n        strokeWidth: \"5\",\n        animationDuration: \"0.75\",\n        width: \"96\",\n        visible: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Failed to load data. Please try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRetry,\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"head-btn-container\",\n        children: [showCreateNewList && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"main-heading\",\n            children: \"List Creation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"add-new-list-button\",\n            onClick: handleCreateNewList,\n            children: \"Create a New List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"alertForCheck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `lists-container ${newListView ? \"row\" : \"\"}`,\n        children: newListView ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-creation-view\",\n            children: listOrder.map(listNumber => {\n              var _lists$listNumber, _lists$listNumber2;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"list-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"List \", listNumber, \" (\", ((_lists$listNumber = lists[listNumber]) === null || _lists$listNumber === void 0 ? void 0 : _lists$listNumber.length) || 0, \" \", \"items)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"list-item-container\",\n                  children: (_lists$listNumber2 = lists[listNumber]) === null || _lists$listNumber2 === void 0 ? void 0 : _lists$listNumber2.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"list-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"name\",\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"description\",\n                      children: item.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"arrow-buttons\",\n                      children: [listNumber === \"1\" && /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"arrow\",\n                        onClick: () => handleMoveItem(item, \"1\", \"3\"),\n                        children: \"\\u2192\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 232,\n                        columnNumber: 33\n                      }, this), listNumber === \"2\" && /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"arrow\",\n                        onClick: () => handleMoveItem(item, \"2\", \"3\"),\n                        children: \"\\u2190\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 240,\n                        columnNumber: 33\n                      }, this), listNumber === \"3\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"arrow-buttons-row\",\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"arrow start-arrow\",\n                          onClick: () => handleMoveItem(item, \"3\", \"1\"),\n                          children: \"\\u2190\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 249,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"arrow end-arrow\",\n                          onClick: () => handleMoveItem(item, \"3\", \"2\"),\n                          children: \"\\u2192\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 257,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 248,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 29\n                    }, this)]\n                  }, item.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 23\n                }, this)]\n              }, listNumber, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCancel,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleUpdate,\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-selection\",\n            children: listOrder.map(listNumber => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"check-heading\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  id: `myCheckbox + ${listNumber}`,\n                  type: \"checkbox\",\n                  checked: selectedLists.includes(listNumber),\n                  onChange: () => handleListSelection(listNumber)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `myCheckbox + ${listNumber}`,\n                  className: \"list-head\",\n                  children: [\"List \", listNumber]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 23\n              }, this), lists[listNumber].map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"list-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"name\",\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"description\",\n                  children: item.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 27\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 25\n              }, this))]\n            }, listNumber, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 17\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"umr/mptwrsxy/Tdsv8lvkZNqCXE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","RotatingLines","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","App","_s","loading","setLoading","error","setError","data","setData","lists","setLists","listOrder","setListOrder","selectedLists","setSelectedLists","newListView","setNewListView","newListKey","setNewListKey","showCreateNewList","setShowCreateNewList","fetchData","response","get","total","groupedLists","reduce","acc","item","list_number","push","sortedListNumbers","Object","keys","sort","a","b","err","handleRetry","handleListSelection","listNumber","updatedSelection","includes","filter","num","handleCreateNewList","length","alertForCheckEl","document","getElementById","textContent","firstList","secondList","nextListNumber","Math","max","map","Number","toString","prev","updatedLists","newOrder","inserted","forEach","key","reorderedLists","prevOrder","insertIndex","indexOf","splice","handleMoveItem","fromList","toList","prevLists","updatedFromList","i","id","some","handleCancel","handleUpdate","className","children","strokeColor","strokeWidth","animationDuration","width","visible","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","_lists$listNumber","_lists$listNumber2","name","description","checked","onChange","htmlFor","_c","$RefreshReg$"],"sources":["/home/workspace/reactjs/coding-practices/reactAssessment/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { RotatingLines } from \"react-loader-spinner\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nconst API_URL = \"https://apis.ccbp.in/list-creation/lists\"; // Replace with the actual API URL\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState([]);\n  const [lists, setLists] = useState({});\n  const [listOrder, setListOrder] = useState([]); // To track list order\n  const [selectedLists, setSelectedLists] = useState([]);\n  const [newListView, setNewListView] = useState(false);\n  const [newListKey, setNewListKey] = useState(null); // Track new list number\n  const [showCreateNewList, setShowCreateNewList] = useState(true);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    setLoading(true);\n    setError(false);\n    try {\n      const response = await axios.get(API_URL);\n      const { lists, total } = response.data; // Replace with actual response properties\n      const groupedLists = lists.reduce((acc, item) => {\n        if (!acc[item.list_number]) {\n          acc[item.list_number] = [];\n        }\n        acc[item.list_number].push(item);\n        return acc;\n      }, {});\n\n      // Set the lists and the order they should appear\n      const sortedListNumbers = Object.keys(groupedLists).sort((a, b) => a - b);\n      setData(lists);\n      setLists(groupedLists);\n      setListOrder(sortedListNumbers); // Save the order of list numbers\n      setLoading(false);\n    } catch (err) {\n      setError(true);\n      setLoading(false);\n    }\n  };\n\n  const handleRetry = () => {\n    fetchData();\n  };\n\n  const handleListSelection = (listNumber) => {\n    const updatedSelection = selectedLists.includes(listNumber)\n      ? selectedLists.filter((num) => num !== listNumber)\n      : [...selectedLists, listNumber];\n    setSelectedLists(updatedSelection);\n  };\n\n  const handleCreateNewList = () => {\n    if (selectedLists.length !== 2) {\n      let alertForCheckEl = document.getElementById(\"alertForCheck\");\n      alertForCheckEl.textContent =\n        \"*You should select exactly 2 lists to create a new list\";\n      return;\n    }\n\n    // Sort the selected list numbers to determine the correct order\n    const [firstList, secondList] = selectedLists.sort((a, b) => a - b);\n\n    // Determine the next available list number by checking the highest existing list number\n    const nextListNumber = Math.max(...Object.keys(lists).map(Number)) + 1;\n\n    // Set the new list key to be the next list number\n    const newListKey = nextListNumber.toString();\n    setNewListKey(newListKey);\n\n    // Insert the new list dynamically between the selected lists\n    setLists((prev) => {\n      const updatedLists = { ...prev };\n      const newOrder = [];\n\n      // Find the correct insertion point for the new list\n      let inserted = false;\n      Object.keys(updatedLists)\n        .sort((a, b) => a - b)\n        .forEach((key) => {\n          newOrder.push(key);\n          if (key === firstList.toString() && !inserted) {\n            newOrder.push(newListKey); // Insert new list after the first selected list\n            inserted = true;\n          }\n        });\n\n      const reorderedLists = {};\n      newOrder.forEach((key) => {\n        reorderedLists[key] = updatedLists[key] || [];\n      });\n      reorderedLists[newListKey] = []; // Add an empty array for the new list (0 items)\n\n      return reorderedLists;\n    });\n\n    setListOrder((prevOrder) => {\n      const newOrder = [...prevOrder];\n      const insertIndex = newOrder.indexOf(firstList.toString()) + 1; // Position after the first selected list\n      newOrder.splice(insertIndex, 0, newListKey); // Insert the new list in the order\n      return newOrder;\n    });\n\n    setNewListView(true); // Show the new list view\n  };\n\n  const handleMoveItem = (item, fromList, toList = \"3\") => {\n    setLists((prevLists) => {\n      const updatedLists = { ...prevLists };\n\n      // Remove the item from the source list\n      const updatedFromList = (updatedLists[fromList] || []).filter(\n        (i) => i.id !== item.id\n      );\n\n      // Ensure the target list exists in the lists object\n      if (!updatedLists[toList]) {\n        updatedLists[toList] = [];\n      }\n\n      // Add the item to the target list\n      if (!updatedLists[toList].some((i) => i.id === item.id)) {\n        updatedLists[toList].push(item);\n      }\n\n      // Return the updated lists\n      return {\n        ...updatedLists,\n        [fromList]: updatedFromList, // Update the source list\n      };\n    });\n\n    // Ensure List 3 is included in the list order\n    setListOrder((prevOrder) => {\n      if (!prevOrder.includes(toList)) {\n        return [...prevOrder, toList];\n      }\n      return prevOrder;\n    });\n  };\n\n  const handleCancel = () => {\n    setNewListView(false);\n    setSelectedLists([]); // Uncheck all checkboxes\n    fetchData();\n  };\n\n  const handleUpdate = () => {\n    setNewListView(false);\n    setSelectedLists([]); // Uncheck all checkboxes\n\n    // Ensure List 3 has the same behavior as List 1 or List 2 after update\n    setLists((prevLists) => {\n      const updatedLists = { ...prevLists };\n\n      // Ensure that List 3 is finalized (removes its dual-arrow behavior)\n      if (updatedLists[\"3\"]) {\n        updatedLists[\"3\"] = [...updatedLists[\"3\"]]; // Keep its items intact\n      }\n\n      return updatedLists;\n    });\n\n    setListOrder((prevOrder) => {\n      // Ensure List 3 stays in its current order position\n      return [...prevOrder];\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      {loading ? (\n        <div className=\"loader\">\n          <RotatingLines\n            strokeColor=\"grey\"\n            strokeWidth=\"5\"\n            animationDuration=\"0.75\"\n            width=\"96\"\n            visible={true}\n          />\n        </div>\n      ) : error ? (\n        <div className=\"error-view\">\n          <p>Failed to load data. Please try again.</p>\n          <button onClick={handleRetry}>Try Again</button>\n        </div>\n      ) : (\n        <div className=\"main-container\">\n          <div className=\"head-btn-container\">\n            {showCreateNewList && (\n              <>\n                <h1 className=\"main-heading\">List Creation</h1>\n                <button\n                  type=\"button\"\n                  className=\"add-new-list-button\"\n                  onClick={handleCreateNewList}\n                >\n                  Create a New List\n                </button>\n              </>\n            )}\n            <span id=\"alertForCheck\"></span>\n          </div>\n          <div className={`lists-container ${newListView ? \"row\" : \"\"}`}>\n            {newListView ? (\n              <div>\n                <div className=\"list-creation-view\">\n                  {listOrder.map((listNumber) => (\n                    <div key={listNumber} className=\"list-container\">\n                      <h3>\n                        List {listNumber} ({lists[listNumber]?.length || 0}{\" \"}\n                        items)\n                      </h3>\n                      <div className=\"list-item-container\">\n                        {lists[listNumber]?.map((item) => (\n                          <div key={item.id} className=\"list-item\">\n                            <span className=\"name\">{item.name}</span>\n                            <span className=\"description\">\n                              {item.description}\n                            </span>\n\n                            {/* Arrow buttons for moving items */}\n                            <div className=\"arrow-buttons\">\n                              {listNumber === \"1\" && (\n                                <button\n                                  className=\"arrow\"\n                                  onClick={() => handleMoveItem(item, \"1\", \"3\")}\n                                >\n                                  →\n                                </button>\n                              )}\n                              {listNumber === \"2\" && (\n                                <button\n                                  className=\"arrow\"\n                                  onClick={() => handleMoveItem(item, \"2\", \"3\")}\n                                >\n                                  ←\n                                </button>\n                              )}\n                              {listNumber === \"3\" && (\n                                <div className=\"arrow-buttons-row\">\n                                  <button\n                                    className=\"arrow start-arrow\"\n                                    onClick={() =>\n                                      handleMoveItem(item, \"3\", \"1\")\n                                    }\n                                  >\n                                    ←\n                                  </button>\n                                  <button\n                                    className=\"arrow end-arrow\"\n                                    onClick={() =>\n                                      handleMoveItem(item, \"3\", \"2\")\n                                    }\n                                  >\n                                    →\n                                  </button>\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n\n                <div className=\"actions\">\n                  <button onClick={handleCancel}>Cancel</button>\n                  <button onClick={handleUpdate}>Update</button>\n                </div>\n              </div>\n            ) : (\n              <>\n                <div className=\"list-selection\">\n                  {listOrder.map((listNumber) => (\n                    <div key={listNumber} className=\"list-container\">\n                      <div className=\"check-heading\">\n                        <input\n                          id={`myCheckbox + ${listNumber}`}\n                          type=\"checkbox\"\n                          checked={selectedLists.includes(listNumber)}\n                          onChange={() => handleListSelection(listNumber)}\n                        />\n                        <label\n                          htmlFor={`myCheckbox + ${listNumber}`}\n                          className=\"list-head\"\n                        >\n                          List {listNumber}\n                        </label>\n                      </div>\n                      {lists[listNumber].map((item) => (\n                        <div className=\"list-item\" key={item.id}>\n                          <span className=\"name\">{item.name}</span>\n                          <span className=\"description\">\n                            {item.description}\n                          </span>\n                        </div>\n                      ))}\n                    </div>\n                  ))}\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}